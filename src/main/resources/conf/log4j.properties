#配置日志输出器:记录日志级别warn,输出位置为C(自定义的名称)
#log4j.rootLogger=,C 表示所有的级别都会监听
#log4j.rootLogger=debug,F 
#配置输出位置:为自定义的C设定输出位置,定义输出位置为控制台
#log4j.appender.C=org.apache.log4j.ConsoleAppender
##############################
# 日志输出到指定的文件
##############################
#配置输出位置为文件
#log4j.appender.F=org.apache.log4j.FileAppender
#配置输出文件的名称
#log4j.appender.F.File=test.log

##############################
# 每天输出一个日志文件
##############################
#log4j.appender.F=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.F.File=${catalina.home}\\log\\day.log
#为生成类似于day.log.2016-06-07,必须到午夜
#log4j.appender.F.DatePattern='.'yyyy-MM-dd
#org.apache.log4j.RollingFileAppender 指定日志文件的大小
#配置输出格式:为自定义的C设置的格式为SimpleLayout
#log4j.appender.C.layout=org.apache.log4j.SimpleLayout
#log4j.appender.F.layout=org.apache.log4j.SimpleLayout
##############################
# 设置日期输出的格式
##############################
#log4j.appender.F.layout=org.apache.log4j.PatternLayout
#指定格式

#%-5p 表示使用五个字符记录级别,实现缩进的效果
# 级别          输出时间                                                  所在线程          所在类,方法|位置]   -日志信息
#[%-5p] [%d{yyyy-MM-dd HH:mm:ss}] [%t]    [%C.%M|%L]      - %m%n
#log4j.appender.F.layout.ConversionPattern=[%-5p] [%d{yyyy-MM-dd HH:mm:ss}] [%t] [%C.%M|%L] - %m%n
#log4j.appender.F.layout.ConversionPattern=%-4r %-5p [%t] %37c %3x - %m%n


#log4j.category.org.springframework.beans.factory=DEBUG
#####mybatis显示SQL语句的配置######
#log4j.logger.com.ibatis=DEBUG
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
#log4j.logger.org.apache.ibatis.jdbc.ScriptRunner=DEBUG
#log4j.logger.java.sql.Connection=DEBUG
#log4j.logger.java.sql.Statement=DEBUG
#log4j.logger.java.sql.PreparedStatement=DEBUG
log4j.rootLogger=debug,Console
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=%d %l %-5p - %m%n

